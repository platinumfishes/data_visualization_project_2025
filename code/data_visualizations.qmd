# Data Visualization Creation

### Section 1

```{r}
library(sf)
library(tmap)
library(leaflet)
library(dplyr)

# Load the shapefile
shapefile_path <- "../data/cb_2023_us_county_500k/cb_2023_us_county_500k.shp"
gdf <- st_read(shapefile_path)

# Load the broadband data (make sure it's the right path to the CSV)
broadband_data <- read.csv("../data/merged_broadband_full.csv")
```

```{r}

```

```{r}
# Load necessary libraries
library(sf)
library(tmap)
library(dplyr)

# Load the shapefile for U.S. counties
shapefile_path <- "../data/cb_2023_us_county_500k/cb_2023_us_county_500k.shp"
gdf <- st_read(shapefile_path)

# Load the broadband data
broadband_data <- read.csv("../data/merged_broadband_full.csv")

# Ensure that the 'STATEFP' columns are of the same type
gdf$STATEFP <- as.character(gdf$STATEFP)
broadband_data$STATEFP <- as.character(broadband_data$STATEFP)

# Remove Alaska, Hawaii, and territories
gdf_filtered <- gdf %>%
  filter(!STATEFP %in% c("02", "15", "72", "60", "66", "69", "78"))

# Aggregating broadband data by STATEFP
state_broadband <- broadband_data %>%
  group_by(STATEFP, STATE_NAME) %>%
  summarize(avg_broadband_adoption = mean(res_conn_per_household, na.rm = TRUE) * 100, # Convert to percentage
            .groups = 'drop')

# Merge the data
merged_data <- left_join(gdf_filtered, state_broadband, by = "STATEFP")

# Set tmap mode to plot
tmap_mode("plot")

# Create breaks for better color distribution
# First check the data distribution
summary(merged_data$avg_broadband_adoption)

# Create breaks based on data distribution - adjust these as needed
breaks <- c(0, 50, 60, 70, 80, 90, 100) # Example breaks - use what makes sense for your data

# Create the map with fixes for all elements
broadband_map <- tm_shape(merged_data) +
  tm_fill(
    col = "avg_broadband_adoption",
    title = "Broadband\nAdoption (%)",
    palette = c(
      "#E0F3F8", "#ABD9E9", "#74ADD1", "#4575B4", "#FEE090", "#FDAE61", "#F46D43"),
    style = "fixed",
    breaks = c(0, 50, 60, 70, 80, 90, 100),
    labels = c("<50%", "50-60%", "60-70%", "70-80%", "80-90%", "90-100%"),
    legend.hist = FALSE,
    colorNA = "gray",
    textNA = "No data",
    alpha = 0.8,
    legend.width = 0.5
  ) +
  tm_borders(col = "white", lwd = 0.2) +
  tm_layout(
    main.title = "Broadband Adoption Across U.S. States",
    main.title.size = 1.2,
    main.title.position = "center",
    main.title.fontface = "bold",
    legend.position = c("right", "bottom"),
    legend.title.size = 0.9,
    legend.text.size = 0.8,
    legend.width = 6,
    legend.height = 9,
    frame = FALSE,
    bg.color = "white",
    inner.margins = c(0.02, 0.02, 0.02, 0.02)
  )

# Print the map
print(broadband_map)
```

```{r}
# Load necessary libraries
library(sf)
library(tmap)
library(dplyr)
library(viridis)  # For better color palettes

# Load the shapefile for U.S. counties
shapefile_path <- "../data/cb_2023_us_county_500k/cb_2023_us_county_500k.shp"
gdf <- st_read(shapefile_path)

# Load the broadband data
broadband_data <- read.csv("../data/merged_broadband_full.csv")

# Ensure that the 'STATEFP' columns are of the same type
gdf$STATEFP <- as.character(gdf$STATEFP)
broadband_data$STATEFP <- as.character(broadband_data$STATEFP)

# Remove Alaska, Hawaii, and territories
gdf_filtered <- gdf %>%
  filter(!STATEFP %in% c("02", "15", "72", "60", "66", "69", "78"))

summary(merged_data$avg_broadband_adoption)
quantile(merged_data$avg_broadband_adoption, na.rm = TRUE)

# Aggregating broadband data by STATEFP
state_broadband <- broadband_data %>%
  group_by(STATEFP, STATE_NAME) %>%
  summarize(avg_broadband_adoption = mean(res_conn_per_household, na.rm = TRUE) * 100, # Convert to percentage
            .groups = 'drop')

# Merge the data
merged_data <- left_join(gdf_filtered, state_broadband, by = "STATEFP")

# Set tmap mode to plot
tmap_mode("plot")

# Create breaks for better color distribution
# Adjust these breaks based on your actual data distribution
data_range <- range(merged_data$avg_broadband_adoption, na.rm = TRUE)
breaks <- seq(floor(data_range[1]), ceiling(data_range[2]), length.out = 7)

# Create the map with fixes for all elements
broadband_map <- tm_shape(merged_data) +
  tm_fill(
    col = "avg_broadband_adoption",
    title = "Broadband\nAdoption (%)",
    palette = c("#FDE0DD", "#FCC5C0", "#FA9FB5", "#F768A1", "#DD3497", "#AE017E", "#7A0177", "#49006A", "#00004C"),
    style = "fixed",
    breaks = breaks,
    labels = c("<50%", "50-60%", "60-70%", "70-80%", "80-90%", "90-100%"),
    legend.hist = FALSE,
    colorNA = "gray",
    textNA = "No data",
    alpha = 0.8,
    legend.width = 0.5
  ) +
  tm_borders(col = "white", lwd = 0.2) +
  tm_layout(
    main.title = "Broadband Adoption Across U.S. States",
    main.title.size = 1.2,
    main.title.position = "center",
    main.title.fontface = "bold",
    legend.position = c("right", "bottom"),
    legend.title.size = 0.9,
    legend.text.size = 0.8,
    legend.width = 7,
    legend.height = 9,
    frame = FALSE,
    bg.color = "white",
    inner.margins = c(0.02, 0.02, 0.02, 0.02)
  )

# Print the map
print(broadband_map)
```

```{r}
library(ggplot2)
library(dplyr)
library(scales)

# Sample data creation (since we don't have your actual file)
# In your real code, you would use: merged_broadband_full <- read.csv("../data/merged_broadband_full.csv")
set.seed(123)
merged_broadband_full <- data.frame(
  median_household_income = rnorm(500, mean=50000, sd=20000),
  broadband_access_rate = runif(500, 50, 100)
)

# Remove rows with NA values
merged_broadband_full <- merged_broadband_full %>%
  drop_na()

# Create income brackets with proper labels
income_breaks <- quantile(merged_broadband_full$median_household_income, 
                         probs = seq(0, 1, 0.2), na.rm = TRUE)

merged_broadband_full <- merged_broadband_full %>%
  mutate(income_bracket = cut(median_household_income,
                             breaks = income_breaks,
                             labels = c("Lowest 20%", "20-40%", "40-60%", "60-80%", "Highest 20%"),
                             include.lowest = TRUE))

# Create the plot
p <- ggplot(merged_broadband_full, aes(x = income_bracket, y = broadband_access_rate)) +
  geom_boxplot(fill = "#0072B2", color = "black", alpha = 0.8) +
  labs(
    title = "Broadband Access Rates by Household Income Brackets",
    x = "Household Income Percentile Brackets",
    y = "Broadband Access Rate (%)",
    caption = "Data source: Your Data Source Here"
  ) +
  scale_y_continuous(limits = c(0, 100)) +
  theme_minimal(base_size = 12) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    axis.title = element_text(face = "bold", size = 12),
    axis.title.x = element_text(margin = margin(t = 10)),
    axis.title.y = element_text(margin = margin(r = 10)),
    axis.text = element_text(size = 10),
    panel.grid.major.x = element_blank(),
    plot.caption = element_text(margin = margin(t = 10), color = "gray50")
  )

# Display the plot
print(p)

# Save the plot as an image
ggsave("../assets/insights/income_vs_broadband_access_rate.png", plot = p, width = 10, height = 8, dpi = 300)
```

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(patchwork)

# Load and clean the data
broadband_data <- read.csv("../data/merged_broadband_full.csv") %>%
  filter(
    !is.na(pct_hs_or_higher),
    !is.na(pct_ba_or_higher),
    !is.na(connections_200kbps_per_1000),
    !is.na(connections_10mbps_per_1000),
    !is.na(connections_25mbps_per_1000),
    !is.na(connections_100mbps_per_1000)
  ) %>%
  mutate(
    hs_education = ifelse(pct_hs_or_higher <= 50, "0-50% HS+", "50-100% HS+"),
    ba_education = ifelse(pct_ba_or_higher <= 50, "0-50% BA+", "50-100% BA+"),
    hs_education = factor(hs_education, levels = c("0-50% HS+", "50-100% HS+")),
    ba_education = factor(ba_education, levels = c("0-50% BA+", "50-100% BA+"))
  )

# Reshape data for plotting
speed_data <- broadband_data %>%
  select(
    hs_education, ba_education,
    connections_200kbps_per_1000,
    connections_10mbps_per_1000,
    connections_25mbps_per_1000,
    connections_100mbps_per_1000
  ) %>%
  pivot_longer(
    cols = starts_with("connections"),
    names_to = "speed_tier",
    values_to = "connections_per_1000"
  ) %>%
  mutate(
    speed_tier = case_when(
      speed_tier == "connections_200kbps_per_1000" ~ ">200 kbps",
      speed_tier == "connections_10mbps_per_1000" ~ ">10 Mbps",
      speed_tier == "connections_25mbps_per_1000" ~ ">25 Mbps",
      speed_tier == "connections_100mbps_per_1000" ~ ">100 Mbps",
      TRUE ~ speed_tier
    ),
    speed_tier = factor(speed_tier, levels = c(">10 Mbps", ">25 Mbps", ">100 Mbps", ">200 kbps"))
  )

# Custom theme for larger text
custom_theme <- function() {
  theme_minimal(base_size = 16) +  # Increase base font size
    theme(
      plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
      plot.subtitle = element_text(size = 16, hjust = 0.5, color = "gray40"),
      axis.title = element_text(face = "bold", size = 14),
      axis.text = element_text(size = 12),
      strip.text = element_text(face = "bold", size = 14),
      panel.grid.major.x = element_blank(),
      panel.grid.minor = element_blank(),
      plot.caption = element_text(size = 12, color = "gray50"),
      legend.position = "none",
      plot.margin = margin(10, 10, 10, 10)
    )
}

# Create HS education plot
hs_plot <- ggplot(speed_data, aes(x = hs_education, y = connections_per_1000, fill = hs_education)) +
  geom_boxplot(width = 0.7, alpha = 0.8, outlier.size = 0.5) +
  facet_wrap(~speed_tier, nrow = 1, scales = "free_y") +
  scale_fill_manual(values = c("#1f77b4", "#2ca02c")) +
  labs(
    title = "Broadband Adoption by High School Education",
    subtitle = "% of population with HS diploma or higher",
    x = "",
    y = "Connections per 1000 households",
  ) +
  custom_theme() +
  theme(
    axis.title.y = element_text(size = 14)  # Larger Y-axis title size
  )

# Create BA education plot
ba_plot <- ggplot(speed_data, aes(x = ba_education, y = connections_per_1000, fill = ba_education)) +
  geom_boxplot(width = 0.7, alpha = 0.8, outlier.size = 0.5) +
  facet_wrap(~speed_tier, nrow = 1, scales = "free_y") +
  scale_fill_manual(values = c("#ff7f0e", "#d62728")) +
  labs(
    title = "Broadband Adoption by College Education",
    subtitle = "% of population with bachelor's degree or higher",
    x = "",
    y = "Connections per 1000 households",
    caption = "Data: FCC Broadband Deployment & American Community Survey"
  ) +
  custom_theme() +
  scale_y_continuous(labels = scales::comma) +
  theme(
    axis.title.y = element_text(size = 14)  # Larger Y-axis title size
  )

# Combine plots
combined_plot <- hs_plot / ba_plot +
  plot_layout(heights = c(1, 1))

# Save and display
ggsave("../assets/insights/education_vs_broadband_speeds.png", 
       plot = combined_plot, width = 14, height = 8, dpi = 300, bg = "white")

print(combined_plot)

```

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(patchwork)

# Load and clean the data
broadband_data <- read.csv("../data/merged_broadband_full.csv") %>%
  filter(
    !is.na(nonresidential_connections_k),
    !is.na(total_connections_k),
    !is.na(broadband_access_rate),
    !is.na(res_conn_per_household),
    !is.na(percent_white_alone),
    !is.na(percent_black_alone),
    !is.na(percent_native_american_alone),
    !is.na(percent_asian_alone),
    !is.na(percent_other_race_alone),
    !is.na(percent_two_or_more_races),
    !is.na(percent_hispanic_latino)
  )

# Reshape data for plotting broadband metrics
broadband_data_long <- broadband_data %>%
  select(
    nonresidential_connections_k, total_connections_k, broadband_access_rate, res_conn_per_household,
    percent_white_alone, percent_black_alone, percent_native_american_alone, percent_asian_alone,
    percent_other_race_alone, percent_two_or_more_races, percent_hispanic_latino
  ) %>%
  pivot_longer(
    cols = c(nonresidential_connections_k, total_connections_k, broadband_access_rate, res_conn_per_household),
    names_to = "broadband_metric",
    values_to = "value"
  ) %>%
  pivot_longer(
    cols = c(percent_white_alone, percent_black_alone, percent_native_american_alone, percent_asian_alone,
             percent_other_race_alone, percent_two_or_more_races, percent_hispanic_latino),
    names_to = "race_group",
    values_to = "race_percentage"
  )

# Create a scatter plot to compare broadband metrics with racial demographics
scatter_plot <- ggplot(broadband_data_long, aes(x = race_percentage, y = value, color = broadband_metric)) +
  geom_point(alpha = 0.6, size = 3) +
  facet_wrap(~ broadband_metric, scales = "free_y") +
  labs(
    title = "Broadband Metrics vs Racial Demographics",
    subtitle = "Comparison of broadband metrics by race percentage",
    x = "Percentage of Population by Race",
    y = "Broadband Metrics",
    color = "Broadband Metric"
  ) +
  scale_color_manual(values = c("#1f77b4", "#ff7f0e", "#2ca02c", "#d62728")) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray40"),
    axis.title = element_text(face = "bold", size = 14),
    axis.text = element_text(size = 12),
    strip.text = element_text(face = "bold", size = 14),
    panel.grid.major.x = element_blank(),
    panel.grid.minor = element_blank(),
    plot.caption = element_text(size = 10, color = "gray50"),
    legend.position = "top",
    plot.margin = margin(10, 10, 10, 10)
  )

# Save the plot as an image in the assets folder
ggsave("../assets/insights/broadband_metrics_vs_racial_demographics.png", 
       plot = scatter_plot, width = 14, height = 8, dpi = 300)

# Display the plot
print(scatter_plot)
```

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)

# Load and prepare the data
broadband_data <- read.csv("../data/merged_broadband_full.csv") %>%
  select(
    nonresidential_connections_k, total_connections_k, broadband_access_rate, res_conn_per_household,
    percent_white_alone, percent_black_alone, percent_asian_alone, percent_hispanic_latino
  ) %>%
  drop_na() %>%
  # Create racial majority categories
  mutate(
    racial_majority = case_when(
      percent_white_alone > 50 ~ "White Majority",
      percent_black_alone > 50 ~ "Black Majority",
      percent_asian_alone > 50 ~ "Asian Majority",
      percent_hispanic_latino > 50 ~ "Hispanic Majority",
      TRUE ~ "No Single Majority"
    ),
    racial_majority = factor(racial_majority, 
                           levels = c("White Majority", "Black Majority", 
                                     "Asian Majority", "Hispanic Majority", 
                                     "No Single Majority"))
  )

# Reshape broadband metrics for plotting
broadband_long <- broadband_data %>%
  pivot_longer(
    cols = c(nonresidential_connections_k, total_connections_k, 
             broadband_access_rate, res_conn_per_household),
    names_to = "broadband_metric",
    values_to = "value"
  ) %>%
  mutate(
    broadband_metric = case_when(
      broadband_metric == "nonresidential_connections_k" ~ "Non-Residential Connections (k)",
      broadband_metric == "total_connections_k" ~ "Total Connections (k)",
      broadband_metric == "broadband_access_rate" ~ "Broadband Access Rate",
      broadband_metric == "res_conn_per_household" ~ "Residential Connections per HH",
      TRUE ~ broadband_metric
    ),
    broadband_metric = factor(broadband_metric,
                            levels = c("Non-Residential Connections (k)",
                                       "Total Connections (k)",
                                       "Broadband Access Rate",
                                       "Residential Connections per HH"))
  )

# Create the boxplot visualization
boxplot_race <- ggplot(broadband_long, aes(x = racial_majority, y = value, fill = racial_majority)) +
  geom_boxplot(alpha = 0.8, outlier.shape = 21, outlier.fill = "red") +
  facet_wrap(~broadband_metric, scales = "free_y", ncol = 2) +
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Broadband Metrics by Racial Majority Composition",
    subtitle = "Comparison across counties with different racial majorities",
    x = "Racial Majority Category",
    y = "Metric Value",
    fill = "Racial Majority",
    caption = "Data: FCC Broadband Deployment & American Community Survey"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray50"),
    axis.title = element_text(face = "bold", size = 12),
    axis.text.x = element_text(angle = 45, hjust = 1),
    strip.text = element_text(face = "bold", size = 12),
    legend.position = "bottom",
    panel.grid.major.x = element_blank(),
    plot.margin = margin(1, 1, 1, 1, "cm")
  ) +
  scale_y_continuous(labels = scales::comma)

# Save the plot as an image in the assets folder
ggsave("../assets/insights/broadband_metrics_vs_racial_demographics_boxplot.png", 
       plot = boxplot_race, width = 14, height = 10, dpi = 300, bg = "white")

# Display the plot
print(boxplot_race)
```

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)

# Function to remove outliers using Tukey's method
remove_outliers <- function(x) {
  qnt <- quantile(x, probs = c(0.25, 0.75), na.rm = TRUE)
  H <- 1.5 * IQR(x, na.rm = TRUE)
  x[x < (qnt[1] - H) | x > (qnt[2] + H)] <- NA
  return(x)
}

# Load and clean data
broadband_data <- read.csv("../data/merged_broadband_full.csv") %>%
  filter(!is.na(broadband_access_rate)) %>%  # Remove NA access rates
  select(broadband_access_rate, 
         percent_white_alone, 
         percent_black_alone, 
         percent_asian_alone,
         percent_native_american_alone,
         percent_hispanic_latino) %>%
  pivot_longer(
    cols = -broadband_access_rate,
    names_to = "race_group",
    values_to = "percentage"
  ) %>%
  filter(!is.na(percentage)) %>%  # Remove NA racial percentages
  mutate(
    race_group = case_when(
      race_group == "percent_white_alone" ~ "White",
      race_group == "percent_black_alone" ~ "Black",
      race_group == "percent_asian_alone" ~ "Asian",
      race_group == "percent_native_american_alone" ~ "Native American",
      race_group == "percent_hispanic_latino" ~ "Hispanic/Latino",
      TRUE ~ race_group
    ),
    race_group = factor(race_group, 
                       levels = c("White", "Black", "Asian", "Hispanic/Latino", "Native American"))
  ) %>%
  group_by(race_group) %>%
  mutate(
    broadband_access_rate = remove_outliers(broadband_access_rate)
  ) %>%
  filter(!is.na(broadband_access_rate))  # Remove the NA'd outliers

# Create boxplot visualization without outliers
access_rate_plot <- ggplot(broadband_data, 
                          aes(x = race_group, y = broadband_access_rate, fill = race_group)) +
  geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # outlier.shape = NA removes any remaining outliers
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Broadband Access Rate by Racial/Ethnic Group (Outliers Removed)",
    subtitle = "Showing central 95% of data for each group",
    x = "Racial/Ethnic Group",
    y = "Broadband Access Rate",
    caption = "Data: FCC Broadband Deployment & American Community Survey\nOutliers removed using Tukey's method (1.5×IQR)",
    fill = "Racial/Ethnic Group"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray50"),
    axis.title = element_text(face = "bold", size = 12),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none",
    panel.grid.major.x = element_blank()
  ) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                    limits = c(0, 1)) +  # Ensure 0-100% scale
  stat_summary(fun = mean, geom = "point", shape = 23, size = 3, fill = "white")

# Save the plot
ggsave("../assets/insights/broadband_access_by_race_no_outliers.png", 
       plot = access_rate_plot, width = 10, height = 8, dpi = 300, bg = "white")

# Display the plot
print(access_rate_plot)
```

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)  # Needed for str_remove() and str_to_title()

# Compare broadband access across quartiles of racial percentages
broadband_data <- read.csv("../data/merged_broadband_full.csv") %>%
  filter(!is.na(broadband_access_rate)) %>%
  mutate(
    white_quartile = ntile(percent_white_alone, 4),
    black_quartile = ntile(percent_black_alone, 4),
    asian_quartile = ntile(percent_asian_alone, 4),
    hispanic_quartile = ntile(percent_hispanic_latino, 4)
  ) %>%
  pivot_longer(
    cols = c(white_quartile, black_quartile, asian_quartile, hispanic_quartile),
    names_to = "race_group",
    values_to = "quartile"
  ) %>%
  mutate(
    race_group = str_remove(race_group, "_quartile"),
    race_group = str_to_title(race_group),
    quartile = factor(quartile, labels = c("Q1 (0-25%)", "Q2 (25-50%)", "Q3 (50-75%)", "Q4 (75-100%)"))
  )

quartile_plot <- ggplot(broadband_data, aes(x = quartile, y = broadband_access_rate, fill = race_group)) +
  geom_boxplot(outlier.shape = NA) +  # Remove outliers
  facet_wrap(~race_group, nrow = 1) +
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Broadband Access by Racial Composition Quartiles",
    subtitle = "Q1: Lowest percentage of racial group, Q4: Highest percentage",
    x = "Percentage Quartile of Racial Group",
    y = "Broadband Access Rate",
    caption = "Data: FCC Broadband Deployment & American Community Survey",
    fill = "Racial Group"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray50"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none",
    strip.text = element_text(face = "bold")
  ) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 3, fill = "white")

# Save the plot
ggsave("../assets/insights/broadband_access_by_race_quartiles.png", 
       plot = quartile_plot, width = 14, height = 6, dpi = 300, bg = "white")

# Display the plot
print(quartile_plot)
```
