[
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "The Rising Threat to Humanitarians",
    "section": "",
    "text": "This timeline shows yearly recorded attacks between 1997 and 2024, revealing a sharp escalation over time. Each peak corresponds to significant geopolitical turning points:\n\n1997: The aftermath of the Rwandan genocide and civil conflict in Somalia marked a turning point. That year saw one of the earliest targeted killings — including the beheading of an ICRC staff member by the Al-Itihaad militant group in Somalia. It signaled a shift from incidental harm to deliberate targeting.\n2008: The Darfur conflict in Sudan intensified, alongside growing insecurity in eastern Congo and post-invasion Iraq. Aid convoys were ambushed, national staff were kidnapped, and international teams began withdrawing from high-risk zones, especially in rural Sudan and Somalia.\n2013: The rise of ISIS in Syria and Iraq, combined with ongoing crises in Mali, South Sudan, and CAR, caused the deadliest year on record to that point. Incidents became more complex and politically motivated, with targeted attacks on UN compounds, medical staff, and convoy operations.\n2024: Although not yet fully analyzed, preliminary data shows the highest number of reported attacks to date. This may reflect expanding conflict zones (e.g., Sudan’s civil war, Gaza, Myanmar), growing hostility toward foreign organizations, or improved reporting mechanisms.\n\nThese peaks highlight how violence against aid workers mirrors — and sometimes precedes — geopolitical volatility. The humanitarian space is shrinking not due to lack of will, but due to mounting and intentional threats.\nUnderstanding these patterns is essential. Not just for crisis forecasting, but for shaping protection protocols, negotiating access, and upholding the humanitarian principles of neutrality and impartiality in an era of increasing polarization.\n\n\n\nNot all aid workers face the same level of danger.\nThis visualization shows total fatalities by year, broken down by national and international staff. The disparity is stark: national employees consistently suffer the vast majority of deaths. In many years, they account for more than 85% of all humanitarian fatalities.\nThis is not incidental — it reflects structural inequalities in how international missions operate:\n\nNational staff are more likely to be deployed in volatile zones and during peak risk periods.\nThey often receive less protective equipment, medical coverage, or evacuation support.\nIn conflict areas, national staff may be perceived as legitimate political targets, especially if linked to foreign organizations.\n\n\nIn short: the closer you live to the crisis, the more dangerous it is to help.\n\nThis is a central challenge for humanitarian protection strategy — one that data like this makes impossible to ignore.\n\n\n\n\n\nInterpretation:\nThis animation shows how fatalities among aid workers fluctuate sharply in response to geopolitical crises. A notable surge is visible beginning in October / November 2023, coinciding with the outbreak of the Israel–Gaza war, renewed civil violence in Sudan, and intensified instability in Myanmar. These overlapping crises led to increased field deployments under unsafe conditions and a rise in direct targeting of humanitarian staff — especially national workers operating in high-risk zones.\nSuch temporal spikes emphasize the need for real-time risk intelligence and flexible security protocols that respond as fast as conflict evolves.\n\n\n\n\n\nInterpretation:\nThe injuries chart reflects similar volatility, with a dramatic escalation around Fall 2023. The sharp rise in national staff wounded during this period may reflect increasing use of indiscriminate tactics (e.g., shelling, convoy ambushes) in urban conflict zones like Khartoum and Gaza City, where aid groups were still attempting to maintain access.\nThe data here reinforces a dangerous truth: even when fatalities are avoided, humanitarian operations increasingly result in physical harm — with national staff again disproportionately affected.\n\n\n\nPatterns of violence against humanitarian workers are not random — they follow the rhythms of war, collapse, and power shifts. Each surge in attacks tells us not just where the world is unstable, but when the cost of compassion becomes highest.\nWhat this timeline shows is that early warning isn’t just for states — it’s vital for those who deliver medicine, food, and protection. Humanitarian organizations need not only courage, but foresight: the ability to read risk in the data before it reaches the field.\nBy mapping the past, we are not just documenting loss — we are building the scaffolding for:"
  },
  {
    "objectID": "introduction.html#casualty-comparison-national-vs.-international-staff",
    "href": "introduction.html#casualty-comparison-national-vs.-international-staff",
    "title": "The Rising Threat to Humanitarians",
    "section": "",
    "text": "Not all aid workers face the same level of danger.\nThis visualization shows total fatalities by year, broken down by national and international staff. The disparity is stark: national employees consistently suffer the vast majority of deaths. In many years, they account for more than 85% of all humanitarian fatalities.\nThis is not incidental — it reflects structural inequalities in how international missions operate:\n\nNational staff are more likely to be deployed in volatile zones and during peak risk periods.\nThey often receive less protective equipment, medical coverage, or evacuation support.\nIn conflict areas, national staff may be perceived as legitimate political targets, especially if linked to foreign organizations.\n\n\nIn short: the closer you live to the crisis, the more dangerous it is to help.\n\nThis is a central challenge for humanitarian protection strategy — one that data like this makes impossible to ignore."
  },
  {
    "objectID": "introduction.html#animated-fatalities-timeline",
    "href": "introduction.html#animated-fatalities-timeline",
    "title": "The Rising Threat to Humanitarians",
    "section": "",
    "text": "Interpretation:\nThis animation shows how fatalities among aid workers fluctuate sharply in response to geopolitical crises. A notable surge is visible beginning in October / November 2023, coinciding with the outbreak of the Israel–Gaza war, renewed civil violence in Sudan, and intensified instability in Myanmar. These overlapping crises led to increased field deployments under unsafe conditions and a rise in direct targeting of humanitarian staff — especially national workers operating in high-risk zones.\nSuch temporal spikes emphasize the need for real-time risk intelligence and flexible security protocols that respond as fast as conflict evolves."
  },
  {
    "objectID": "introduction.html#animated-injuries-barchart",
    "href": "introduction.html#animated-injuries-barchart",
    "title": "The Rising Threat to Humanitarians",
    "section": "",
    "text": "Interpretation:\nThe injuries chart reflects similar volatility, with a dramatic escalation around Fall 2023. The sharp rise in national staff wounded during this period may reflect increasing use of indiscriminate tactics (e.g., shelling, convoy ambushes) in urban conflict zones like Khartoum and Gaza City, where aid groups were still attempting to maintain access.\nThe data here reinforces a dangerous truth: even when fatalities are avoided, humanitarian operations increasingly result in physical harm — with national staff again disproportionately affected."
  },
  {
    "objectID": "introduction.html#why-timing-matters",
    "href": "introduction.html#why-timing-matters",
    "title": "The Rising Threat to Humanitarians",
    "section": "",
    "text": "Patterns of violence against humanitarian workers are not random — they follow the rhythms of war, collapse, and power shifts. Each surge in attacks tells us not just where the world is unstable, but when the cost of compassion becomes highest.\nWhat this timeline shows is that early warning isn’t just for states — it’s vital for those who deliver medicine, food, and protection. Humanitarian organizations need not only courage, but foresight: the ability to read risk in the data before it reaches the field.\nBy mapping the past, we are not just documenting loss — we are building the scaffolding for:"
  },
  {
    "objectID": "code/eda.html",
    "href": "code/eda.html",
    "title": "Introduction.qmd",
    "section": "",
    "text": "import pandas as pd\nimport plotly.express as px\n\n# Load your dataset\ndf = pd.read_csv(\"../data/security_incidents.csv\")  # adjust path if needed\n\n# Filter to valid coordinates\ndf_map = df.dropna(subset=[\"Latitude\", \"Longitude\"])\n\n# Create the interactive map\nfig = px.scatter_geo(\n    df_map,\n    lat=\"Latitude\",\n    lon=\"Longitude\",\n    hover_name=\"Country\",\n    hover_data={\n        \"Year\": True,\n        \"City\": True,\n        \"Means of attack\": True,\n        \"Actor name\": True\n    },\n    opacity=0.4,\n    color_discrete_sequence=[\"red\"],\n    title=\"Global Incident Heatmap of Attacks on Humanitarian Workers (1997–2025)\"\n)\n\nfig.update_layout(\n    geo=dict(showland=True, landcolor=\"rgb(240, 240, 240)\", showcountries=True),\n    title_font_size=20,\n    margin={\"r\":0,\"t\":50,\"l\":0,\"b\":0}\n)\n\nfig.show()\n\n\n  Cell In[6], line 13\n    color=\"#1fff5a\"\n          ^\nSyntaxError: invalid syntax. Perhaps you forgot a comma?\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import font_manager\nimport matplotlib.cm as cm\nimport matplotlib.colors as mcolors\nimport os\n\n# ======================\n# DATA PREPARATION\n# ======================\ndf = pd.read_csv(\"../data/security_incidents.csv\")\ndf = df[df['Year'] != 2025]  # Remove future year\nyearly = df.groupby(\"Year\").size().reset_index(name=\"Incident Count\")\n\n# Normalize years for color mapping\nnorm = mcolors.Normalize(vmin=yearly[\"Year\"].min(), vmax=yearly[\"Year\"].max())\ncmap = cm.get_cmap(\"magma\")\n\n# ======================\n# VISUALIZATION\n# ======================\nplt.figure(figsize=(9, 6), dpi=120)\n\n# Draw line segments between each point, colored by year\nfor i in range(1, len(yearly)):\n    x_vals = [yearly[\"Year\"].iloc[i - 1], yearly[\"Year\"].iloc[i]]\n    y_vals = [yearly[\"Incident Count\"].iloc[i - 1], yearly[\"Incident Count\"].iloc[i]]\n    color = cmap(norm(yearly[\"Year\"].iloc[i]))\n    plt.plot(x_vals, y_vals, color=color, linewidth=4.5, zorder=1)\n\n# Plot each point with its own color\nfor i, row in yearly.iterrows():\n    plt.scatter(\n        row[\"Year\"], row[\"Incident Count\"],\n        color=cmap(norm(row[\"Year\"])),\n        edgecolor=\"black\",\n        s=120,\n        zorder=2\n    )\n\n# Highlight specific years\nhighlight_years = [1997, 2008, 2013, 2024]\nhighlight_data = yearly[yearly['Year'].isin(highlight_years)]\nfor _, row in highlight_data.iterrows():\n    plt.scatter(\n        row['Year'],\n        row['Incident Count'],\n        color='#ff3d8b',\n        s=140,\n        edgecolor='black',\n        zorder=5\n    )\n    plt.annotate(\n        f\"{row['Incident Count']}\",\n        xy=(row['Year'], row['Incident Count']),\n        xytext=(0, 10),\n        textcoords='offset points',\n        fontsize=11,\n        weight='bold',\n        ha='center',\n        color='#d7191c'\n    )\n\n# Titles and styling\nplt.title(\n    \"Reported Attacks on Humanitarian Workers (1997–2024)\",\n    fontsize=17, fontweight='bold', pad=20\n)\nplt.xlabel(\"Year\", fontsize=14, labelpad=12)\nplt.ylabel(\"Number of Attacks / Incidents\", fontsize=14, labelpad=12)\n\n# Bold axis labels\nplt.xlabel(\"Year\", fontsize=14, labelpad=12, fontweight='bold')\nplt.ylabel(\"Number of Attacks / Incidents\", fontsize=14, labelpad=12, fontweight='bold')\n\n# Thicker, white axis lines\nax = plt.gca()\nfor spine in ['bottom', 'left']:\n    ax.spines[spine].set_linewidth(1.5)\n    ax.spines[spine].set_color('white')\n\n\neven_years = [year for year in yearly['Year'] if year % 2 == 0]\nplt.xticks(even_years, rotation=45 if len(even_years) &gt; 8 else 0)\nplt.tick_params(axis='both', which='major', labelsize=12)\n\nfor spine in ['top', 'right']:\n    plt.gca().spines[spine].set_visible(False)\n# Gentle lavender background\nplt.gca().set_facecolor('#f2e8ff')\n\nax = plt.gca()\nax.grid(True, linestyle='--', linewidth=1.2, color='white')\nax.spines['left'].set_linewidth(1.2)\nax.spines['bottom'].set_linewidth(1.2)\nax.spines['left'].set_color('white')\nax.spines['bottom'].set_color('white')\n\n\n# ======================\n# SAVE OUTPUT\n# ======================\nos.makedirs('../assets/introduction', exist_ok=True)\nplt.tight_layout()\nplt.savefig(\n    '../assets/introduction/timeline_attacks.png',\n    bbox_inches='tight',\n    dpi=120,\n    facecolor=plt.gca().get_facecolor(),\n    transparent=False\n)\nplt.show()\n\n/tmp/ipykernel_16962/4145160311.py:24: MatplotlibDeprecationWarning:\n\nThe get_cmap function was deprecated in Matplotlib 3.7 and will be removed in 3.11. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap()`` or ``pyplot.get_cmap()`` instead.\n\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\nfindfont: Font family 'Inconsolata' not found.\n\n\n\n\n\n\n\n\n\n\nimport pandas as pd\nimport plotly.express as px\nimport os\n\n# Load data\ndf = pd.read_csv(\"../data/security_incidents.csv\")\n\n# Filter valid years and months\ndf = df[(df[\"Year\"].between(1997, 2024)) & (~df[\"Month\"].isna())]\ndf[\"Month\"] = df[\"Month\"].astype(int)\ndf[\"Date\"] = pd.to_datetime(df[[\"Year\", \"Month\"]].assign(Day=1))\n\n# Fill NA in casualty columns\ncasualty_cols = [\n    \"Nationals killed\", \"Internationals killed\",\n    \"Nationals wounded\", \"Internationals wounded\"\n]\ndf[casualty_cols] = df[casualty_cols].fillna(0)\n\n# Group by month\nmonthly_group = df.groupby(\"Date\")[\n    [\"Nationals killed\", \"Internationals killed\", \"Nationals wounded\", \"Internationals wounded\"]\n].sum().reset_index()\n\n# Melt for fatalities\nkilled_melted = monthly_group.melt(\n    id_vars=\"Date\",\n    value_vars=[\"Nationals killed\", \"Internationals killed\"],\n    var_name=\"Group\",\n    value_name=\"Fatalities\"\n)\n\n# Melt for wounded\nwounded_melted = monthly_group.melt(\n    id_vars=\"Date\",\n    value_vars=[\"Nationals wounded\", \"Internationals wounded\"],\n    var_name=\"Group\",\n    value_name=\"Wounded\"\n)\n\n# Animated bar chart for fatalities\nfig_killed = px.bar(\n    killed_melted,\n    x=\"Group\",\n    y=\"Fatalities\",\n    animation_frame=killed_melted[\"Date\"].dt.strftime(\"%b %Y\"),\n    range_y=[0, killed_melted[\"Fatalities\"].max() + 5],\n    color=\"Group\",\n    title=\"Monthly Aid Worker Fatalities Over Time (1997–2024)\",\n    color_discrete_map={\n        \"Nationals killed\": \"#d62728\",\n        \"Internationals killed\": \"#1f77b4\"\n    }\n)\n\n# Animated bar chart for wounded\nfig_wounded = px.bar(\n    wounded_melted,\n    x=\"Group\",\n    y=\"Wounded\",\n    animation_frame=wounded_melted[\"Date\"].dt.strftime(\"%b %Y\"),\n    range_y=[0, wounded_melted[\"Wounded\"].max() + 5],\n    color=\"Group\",\n    title=\"Monthly Aid Worker Injuries Over Time (1997–2024)\",\n    color_discrete_map={\n        \"Nationals wounded\": \"#d62728\",\n        \"Internationals wounded\": \"#1f77b4\"\n    }\n)\n\n# Ensure output folder exists\noutput_dir = \"../assets/introduction\"\nos.makedirs(output_dir, exist_ok=True)\n\n# Save as HTML\nfatalities_path = f\"{output_dir}/timeline_fatalities.html\"\nwounded_path = f\"{output_dir}/timeline_wounded.html\"\nfig_killed.write_html(fatalities_path)\nfig_wounded.write_html(wounded_path)\n\nfatalities_path, wounded_path\n\n('../assets/introduction/timeline_fatalities.html',\n '../assets/introduction/timeline_wounded.html')\n\n\n\nimport pandas as pd\nimport plotly.express as px\nimport os\n\n# Load and prep data\ndf = pd.read_csv(\"../data/security_incidents.csv\")\ndf = df[(df[\"Year\"].between(1997, 2024)) & (~df[\"Month\"].isna())]\ndf[\"Month\"] = df[\"Month\"].astype(int)\ndf[\"Date\"] = pd.to_datetime(df[[\"Year\", \"Month\"]].assign(Day=1))\n\n# Fill missing values\ncasualty_cols = [\n    \"Nationals killed\", \"Internationals killed\",\n    \"Nationals wounded\", \"Internationals wounded\"\n]\ndf[casualty_cols] = df[casualty_cols].fillna(0)\n\n# Group monthly totals\nmonthly = df.groupby(\"Date\")[casualty_cols].sum().reset_index()\n\n# Convert to long format\nfatalities_long = monthly.melt(\n    id_vars=\"Date\",\n    value_vars=[\"Nationals killed\", \"Internationals killed\"],\n    var_name=\"Group\",\n    value_name=\"Fatalities\"\n)\n\nwounded_long = monthly.melt(\n    id_vars=\"Date\",\n    value_vars=[\"Nationals wounded\", \"Internationals wounded\"],\n    var_name=\"Group\",\n    value_name=\"Wounded\"\n)\n\n# Use readable string frame but cumulative by actual Date\ndef expand_cumulative(df, value_col):\n    frames = []\n    unique_frames = df[\"Date\"].sort_values().unique()\n    for i, date in enumerate(unique_frames):\n        frame_df = df[df[\"Date\"] &lt;= date].copy()\n        frame_df[\"Frame\"] = date.strftime(\"%b %Y\")  # readable frame\n        frames.append(frame_df)\n    return pd.concat(frames)\n\nfatalities_cumulative = expand_cumulative(fatalities_long, \"Fatalities\")\nwounded_cumulative = expand_cumulative(wounded_long, \"Wounded\")\n\n# Animated line: Fatalities\nfig_killed = px.line(\n    fatalities_cumulative,\n    x=\"Date\", y=\"Fatalities\", color=\"Group\",\n    animation_frame=\"Frame\", title=\"Animated Monthly Fatalities (Cumulative)\",\n    color_discrete_map={\n        \"Nationals killed\": \"#d62728\",\n        \"Internationals killed\": \"#1f77b4\"\n    }\n)\n\nfig_killed.update_traces(mode=\"lines\")  # remove points\n\n# Animated line: Wounded\nfig_wounded = px.line(\n    wounded_cumulative,\n    x=\"Date\", y=\"Wounded\", color=\"Group\",\n    animation_frame=\"Frame\", title=\"Animated Monthly Injuries (Cumulative)\",\n    color_discrete_map={\n        \"Nationals wounded\": \"#d62728\",\n        \"Internationals wounded\": \"#1f77b4\"\n    }\n)\n\nfig_wounded.update_traces(mode=\"lines\")  # remove points\n\n# Save HTML\noutput_dir = \"../assets/introduction\"\nos.makedirs(output_dir, exist_ok=True)\nfig_killed.write_html(f\"{output_dir}/timeline_fatalities_line.html\")\nfig_wounded.write_html(f\"{output_dir}/timeline_wounded_line.html\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\nUnrequited Aid: The Intimate Struggle of Humanitarian Work\n",
    "section": "",
    "text": "2025 Georgetown Data Science & Analytics Project"
  },
  {
    "objectID": "index.html#global-risk-landscape",
    "href": "index.html#global-risk-landscape",
    "title": "\nUnrequited Aid: The Intimate Struggle of Humanitarian Work\n",
    "section": "Global Risk Landscape",
    "text": "Global Risk Landscape"
  },
  {
    "objectID": "index.html#implications-of-our-research",
    "href": "index.html#implications-of-our-research",
    "title": "\nUnrequited Aid: The Intimate Struggle of Humanitarian Work\n",
    "section": "Implications of Our Research",
    "text": "Implications of Our Research\nHumanitarian access is not just constrained by conflict—it’s under attack.\nBetween 1997 and 2025, over 4,300 incidents of violence against aid workers have been recorded across 90+ countries. The data reveals a grim pattern:\n\nNational staff face over 80% of fatalities and kidnappings, often without adequate protection.\nAmbushes and roadside attacks are the most frequent and deadly contexts.\nNon-state armed groups — including the Taliban, Al-Itihaad, and LRA — are key perpetrators, driven by political motives or ransom demands.\nMost incidents occur in Somalia, Sudan, Afghanistan, Iraq, and DRC, with spikes aligned to major geopolitical events.\nA significant number of attacks remain unverified and unpunished, reflecting legal and accountability gaps.\n\n\n\nThese are not isolated tragedies…\n\n\nthey represent a systemic failure to protect those who serve.\n\n\nThis project provides a foundation for: - Risk-aware operational planning - Targeted protections for national staff - Policy advocacy grounded in field-level data\nWhat emerges is not just a dataset — but a map of global vulnerability, and a call to safeguard humanitarian space."
  }
]